services:

    # API service running the application in port 8011
    universi-me:
        container_name: universi-me
        build:
            context: .
        restart: unless-stopped
        networks:
            - universi-me-network
        ports:
            - "8011:8080"
        volumes:
            - ./data/api:/var/lib/login-session/data
        depends_on:
            - universi-me-db
            - universi-me-mongo
        environment:
            API_DB_DOMAIN: universi-me-db
            API_DB_MONGO_HOST: universi-me-mongo
            API_SERVER_SESSION_STORE_DIR: /var/lib/login-session/data
        env_file:
            - .env

    # The database service running postgres, in same network as the application
    universi-me-db:
        container_name: universi-me-postgres
        image: postgres:17.2
        restart: unless-stopped
        networks:
            - universi-me-network
        volumes:
            - ./data/postgres:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: ${API_DB_USER}
            POSTGRES_PASSWORD: ${API_DB_PASS}
            POSTGRES_DB: ${API_DB_NAME}
            PGDATA: /var/lib/postgresql/data
        env_file:
            - .env

    # The database service running MongoGB, in same network as the application
    universi-me-mongo:
        container_name: universi-me-mongo
        image: mongo:latest
        restart: unless-stopped
        networks:
            - universi-me-network
        volumes:
            - ./data/mongo:/data/db
            - ./data/mongo:/data/configdb
        env_file:
            - .env

    # Minio service, port 8015 for the web interface and 8016 for the API
    minio:
        container_name: universi-me-minio
        image: bitnami/minio
        restart: unless-stopped
        ports:
            - '8015:9000'
            - '8016:9001'
        volumes:
            - ./data/minio:/data
        env_file:
            - .env

networks:
    universi-me-network:
        driver: bridge
