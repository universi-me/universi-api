<beans:beans
    xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">


	<http use-expressions="true" auto-config="true">
		<expression-handler ref="defaultWebSecurityExpressionHandler" />
		<csrf disabled="true"/>

		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/login" access="permitAll"/>
		<intercept-url pattern="/registrar" access="permitAll"/>

		<intercept-url pattern="/css/**" access="permitAll"/>
		<intercept-url pattern="/js/**" access="permitAll"/>
		<intercept-url pattern="/img/**" access="permitAll"/>
		<intercept-url pattern="/favicon.ico" access="permitAll"/>

		<!-- Test rules -->
		<intercept-url pattern="/admin" access="hasRole('ADMIN')"/>
		<intercept-url pattern="/user" access="hasRole('USER')"/>

		<!-- Perimitir acesso ao H2-console sem login -->
		<intercept-url pattern="/h2-console/**" access="permitAll"/>
		
		<intercept-url pattern="/**" access="isAuthenticated()"/>

		<custom-filter ref="customUsernamePasswordAuthenticationFilter" after="FORM_LOGIN_FILTER"/>
		<form-login login-page="/login" authentication-failure-url="/login?error" authentication-success-handler-ref="autenticacaoValidaHandler" />
		<logout invalidate-session="true" logout-success-url="/login?logout" delete-cookies="true"/>
		
		
		<!-- Corrigir H2-console -->
		<headers>
			<frame-options policy="SAMEORIGIN"/>
		</headers>
	</http>

	<beans:bean id="customUsernamePasswordAuthenticationFilter" class="me.universi.usuario.services.CustomUsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="authenticationSuccessHandler" ref="autenticacaoValidaHandler"/>
		<beans:property name="authenticationFailureHandler" ref="autenticacaofalhaHandler"/>
		<beans:property name="filterProcessesUrl" value="/login.js"/>
		<beans:property name="usernameParameter" value="username"/>
		<beans:property name="passwordParameter" value="password"/>
	</beans:bean>


	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<beans:bean id="autenticacaofalhaHandler" class="me.universi.usuario.services.AutenticacaoFalhaHandler" />

	<beans:bean id="autenticacaoValidaHandler" class="me.universi.usuario.services.AutenticacaoValidaHandler" />

	<beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_USER
			</beans:value>
		</beans:property>
	</beans:bean>
	<beans:bean id="methodSecurityExpressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name = "roleHierarchy" ref="roleHierarchy"/>
	</beans:bean>
	<beans:bean id="defaultWebSecurityExpressionHandler"
				class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<beans:property name="roleHierarchy" ref="roleHierarchy"/>
	</beans:bean>
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
					<beans:constructor-arg ref="roleHierarchy" />
				</beans:bean>
				<beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
					<beans:property name="expressionHandler" ref="defaultWebSecurityExpressionHandler"/>
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>


	<beans:bean id="SecurityUserDetailsService" class="me.universi.usuario.services.SecurityUserDetailsService"></beans:bean>

	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="passwordEncoder" ref="encoder" />
		<beans:property name="userDetailsService" ref="SecurityUserDetailsService" />
	</beans:bean>
	
</beans:beans>